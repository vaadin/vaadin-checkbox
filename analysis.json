{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-checkbox.html",
        "start": {
          "line": 253,
          "column": 6
        },
        "end": {
          "line": 253,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<vaadin-checkbox>` is a Polymer 2 element for customized checkboxes.\n\n```html\n<vaadin-checkbox>\n  Make my profile visible\n</vaadin-checkbox>\n```\n\n### Styling\n\nThe following shadow DOM parts are exposed for styling:\n\nPart name         | Description\n------------------|----------------\n`wrapper`         | The `<label>` element which wraps the checkbox and [part=\"label\"]\n`native-checkbox` | The `<input type=\"checkbox\">` element\n`checkbox`        | The `<span>` element for a custom graphical check\n`label`           | The `<span>` element for slotted text/HTML label\n\nThe following attributes are exposed for styling:\n\nAttribute    | Description\n-------------|------------\n`active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard.\n`disabled`   | Set when the checkbox is disabled.\n`focus-ring` | Set when the checkbox is focused using the keyboard.\n`focused`    | Set when the checkbox is focused.",
          "summary": "",
          "path": "vaadin-checkbox.html",
          "properties": [
            {
              "name": "autofocus",
              "type": "boolean",
              "description": "Specify that this control should have input focus when the page loads.",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focused",
              "type": "boolean",
              "description": "If true, the element currently has focus.",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 63,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_focusedChanged\"",
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "If true, the user cannot interact with this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 68,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_disabledChanged\""
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_isShiftTabbing",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 74,
                  "column": 8
                },
                "end": {
                  "line": 74,
                  "column": 32
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "checked",
              "type": "boolean",
              "description": "True if the checkbox is checked.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 124,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_checkedChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "_previousTabIndex",
              "type": "number",
              "description": "Stores the previous value of tabindex attribute when checkbox is disabled",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 12
                },
                "end": {
                  "line": 131,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "indeterminate",
              "type": "boolean",
              "description": "Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 142,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_indeterminateChanged\""
                }
              }
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of the control, which is submitted with the form data.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 149,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "value",
              "type": "string",
              "description": "The value given to the data submitted with the checkbox's name to the server when the control is inside a form.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 154,
                  "column": 12
                },
                "end": {
                  "line": 157,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"on\""
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 161,
                  "column": 8
                },
                "end": {
                  "line": 167,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 105,
                  "column": 4
                },
                "end": {
                  "line": 110,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 112,
                  "column": 4
                },
                "end": {
                  "line": 117,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focusedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 119,
                  "column": 4
                },
                "end": {
                  "line": 127,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focused"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 129,
                  "column": 4
                },
                "end": {
                  "line": 131,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeyupListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 133,
                  "column": 4
                },
                "end": {
                  "line": 135,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 146,
                  "column": 4
                },
                "end": {
                  "line": 153,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focus",
              "description": "Moving the focus from the host element causes firing of the blur event what leads to problems in IE.",
              "privacy": "private",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 159,
                  "column": 4
                },
                "end": {
                  "line": 161,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "blur",
              "description": "Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.",
              "privacy": "private",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 168,
                  "column": 4
                },
                "end": {
                  "line": 170,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_disabledChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 218,
                  "column": 8
                },
                "end": {
                  "line": 228,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                }
              ]
            },
            {
              "name": "_tabindexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 183,
                  "column": 4
                },
                "end": {
                  "line": 195,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "tabindex"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_addEventListenerToNode",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
                "start": {
                  "line": 47,
                  "column": 6
                },
                "end": {
                  "line": 51,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                },
                {
                  "name": "eventName"
                },
                {
                  "name": "handler"
                }
              ],
              "inheritedFrom": "Polymer.GestureEventListeners"
            },
            {
              "name": "_removeEventListenerFromNode",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "bower_components/polymer/lib/mixins/gesture-event-listeners.html",
                "start": {
                  "line": 53,
                  "column": 6
                },
                "end": {
                  "line": 57,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                },
                {
                  "name": "eventName"
                },
                {
                  "name": "handler"
                }
              ],
              "inheritedFrom": "Polymer.GestureEventListeners"
            },
            {
              "name": "_checkedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 175,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "checked"
                }
              ]
            },
            {
              "name": "_indeterminateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 8
                },
                "end": {
                  "line": 183,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "indeterminate"
                }
              ]
            },
            {
              "name": "_addActiveListeners",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 8
                },
                "end": {
                  "line": 216,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_handleClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 234,
                  "column": 8
                },
                "end": {
                  "line": 241,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_toggleChecked",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 243,
                  "column": 8
                },
                "end": {
                  "line": 245,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [
            {
              "name": "includeStyle",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 40,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.CheckboxElement",
          "attributes": [
            {
              "name": "autofocus",
              "description": "Specify that this control should have input focus when the page loads.",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 50,
                  "column": 8
                },
                "end": {
                  "line": 52,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focused",
              "description": "If true, the element currently has focus.",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 63,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "description": "If true, the user cannot interact with this element.",
              "sourceRange": {
                "file": "bower_components/vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 68,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "checked",
              "description": "True if the checkbox is checked.",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 12
                },
                "end": {
                  "line": 124,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "indeterminate",
              "description": "Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 142,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "name",
              "description": "The name of the control, which is submitted with the form data.",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 12
                },
                "end": {
                  "line": 149,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "value",
              "description": "The value given to the data submitted with the checkbox's name to the server when the control is inside a form.",
              "sourceRange": {
                "start": {
                  "line": 154,
                  "column": 12
                },
                "end": {
                  "line": 157,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "checked-changed",
              "description": "Fired when the `checked` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "indeterminate-changed",
              "description": "Fired when the `indeterminate` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "vaadin-checkbox.html",
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 21
                }
              }
            }
          ],
          "tagname": "vaadin-checkbox",
          "mixins": [
            "Vaadin.ControlStateMixin",
            "Vaadin.ThemableMixin",
            "Polymer.GestureEventListeners"
          ]
        }
      ]
    }
  ]
}
